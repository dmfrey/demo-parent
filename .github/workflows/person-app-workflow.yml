name: person-app-workflow

on:
  push:
    branches:
      - develop
    paths:
      - '.github/workflows/person-app-workflow.yml'
      - 'pom.xml'
      - 'app-parent/pom.xml'
      - 'app-parent/person-app/**'

env:
  REGISTRY: ${{ secrets.DH_USER }}
  IMAGE_NAME: person-app
  GITHUB_USERNAME: ${{ github.actor }}
  GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:

  build-and-test:
    name: Build and Test source

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      repository-projects: write

    steps:

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PAT }}

      - name: Checkout the source code
        uses: actions/checkout@v3
        with:
          path: source

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Get app version
        run: |
          cd source
          echo "app_version=$(./mvnw -s settings.xml -pl :person-app help:evaluate -Dexpression=project.version -q -DforceStdout)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          cd ..

      - name: Build, test and create the image
        run: |
          cd source
          ./mvnw -e -B -s settings.xml \
          -pl :person-app \
          --no-transfer-progress \
          clean install deploy spring-boot:build-image \
          -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.app_version }}
          cd ..

      - name: Push the image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.app_version }}

      - name: Checkout GitOps
        uses: actions/checkout@v2
        with:
          repository: 'dmfrey/demo-parent-gitops'
          token: ${{ secrets.GITOPS_TOKEN }}
          persist-credentials: 'true'
          ref: 'main'
          path: gitops

      - name: Update GitOps Version
        run: |
          cd gitops
          cd charts/person-app
          old_version=$(cat ./values.yaml | grep tag: | awk '{print $2}')
          echo "Old Version: $old_version, New Version: ${{ env.app_version }}"
          sed -i "s/$old_version/${{ env.app_version }}/" ./values.yaml
          cd ../..
          git config user.name "${{ github.actor }}"
          git config user.email "<>"
          git add .
          git commit -m "update version to ${{ env.app_version }}"
          git push
          cd ..
